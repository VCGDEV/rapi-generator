package {basePackage}.{servicePackage};

import {basePackage}.{exceptionPackage}.{Exception};
import {basePackage}.{dtoPackage}.{dtoName};
import org.springframework.hateoas.Resource;
import java.util.List;
import org.springframework.data.domain.Page;
/**
* Versions 1.0
* Created using Rest API Generator
* Basic CRUD service
*/
public interface {entityName}Service{

    /*
    * Method to add new {entityName} in database
    * @param {dtoVar} the values to be saved
    * @throws {Exception} if an error happens in transaction
    */
    Resource<{classId}> add{entityName}({dtoName} {dtoVar}) throws {Exception}{}

    /**
    * Method to update values of entity
    * @param {dtoVar} the values to update
    * @throws {Exception} if an error happens in transaction
    */
    Resource<{classId}> update{entityName}({dtoName} {dtoVar}) throws {Exception} {}

    /**
    * Get details of {entityName}
    * @param id unique identifier to find object
    * throws {Exception} if an error happens in select transaction
    */
    Resource<{dtoName}> findById({classId} id) throws {Exception}{}

    /**
    * Get List of all {entityName}
    * throws {Exception} if an error happens in select transaction
    */
    List<Resource<{dtoName}>> findAll() throws {Exception}{}

    /**
    * Get paginated result
    * @param page -> the page to be extracted from database
    * @param size -> the size of dataset
    * @param columnToOrder -> The column to sort result
    * @param orderType -> values {'DESC','ASC'}
    * @return the page obtained from database
    * @throws {Exception} if an error happens in query select
    */
    Page<Resource<dtoName>> getPaginatedResult(
        Integer page,Integer size,String columnToOrder, String orderType
    ) throws {Exception} {}

}